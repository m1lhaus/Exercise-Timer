import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * TODO
 *
 * @author Milan Herbig
 */
public class MainApplication extends JFrame {

    private enum CounterMode {
        ASCENDANT, DESCENDANT
    }

    private class Time {
        int minutes;
        int seconds;

        private Time(int minutes, int seconds) {
            this.minutes = minutes;
            this.seconds = seconds;
        }
    }

    private WawPlayer wawPlayer;        // waw audio file player
    private Timer exTimer;              // timer for exercise time measurement

    private final boolean CASOMIRA_BEZI = false;
    private final boolean CASOMIRA_NEBEZI = true;

    private int defaultExMinutes = 1;                   // default value number of minutes on timer
    private int defaultExSeconds = 0;                   // default number of seconds on timer

//    static int pocSerii = 0;

    private CounterMode seriesCounterMode = CounterMode.ASCENDANT;

    /**
     * MainApplication constructor - application entry point
     */
    private MainApplication() {
        initComponents();
        this.setLocationRelativeTo(null);

        wawPlayer = new WawPlayer();      // waw audio file player
        exTimer = new Timer(1000, exTimerTickTock);        // timer for exercise time measurement

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jMenuBar1 = new JMenuBar();
        jMenu1 = new JMenu();
        jMenuItem3 = new JMenuItem();
        jMenuItem1 = new JMenuItem();
        jMenu3 = new JMenu();
        jMenuItem2 = new JMenuItem();
        jPanelTimer = new JPanel();
        jButtonStartStop = new JButton();
        jTextFieldMinutes = new JTextField();
        jLabelColon = new JLabel();
        jTextFieldSeconds = new JTextField();
        jPanelPreset = new JPanel();
        jLabelPresetTitle = new JLabel();
        jRadioButton1min = new JRadioButton();
        jRadioButton2min = new JRadioButton();
        jRadioButton3min = new JRadioButton();
        jRadioButton5min = new JRadioButton();
        jRadioButton10min = new JRadioButton();
        jRadioButtonXmin = new JRadioButton();
        jTextFieldXmin = new JTextField();
        jLabelXmin = new JLabel();
        jButtonResetTimer = new JButton();
        jPanelSeries = new JPanel();
        jTextFieldSeries = new JTextField();
        jLabelSeries = new JLabel();
        jButtonSetSeries = new JButton();
        jButtonResetSeries = new JButton();
        jLabelSeriesCounterMode = new JLabel();
        jPanelGlobalTime = new JPanel();
        jLabelHours = new JLabel();
        jTextFieldGlobalTime = new JTextField();
        jLabelGlobalTime = new JLabel();
        jLabelGlobalTimeState = new JLabel();
        jButtonResetGlobalTime = new JButton();
        jButtonPauseGlobalTime = new JButton();
        jFramePreferences = new JFrame();
        jLabelPreferencesDesc = new JLabel();
        jRadioButtonAsc = new JRadioButton();
        jRadioButtonDesc = new JRadioButton();
        jLabelPreferencesHeading = new JLabel();
        jButtonSavePreferences = new JButton();
        jButtonStornoPreferences = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Exercise Timer");
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        setResizable(false);
        Container contentPane = getContentPane();
        contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.Y_AXIS));

        //======== jMenuBar1 ========
        {

            //======== jMenu1 ========
            {
                jMenu1.setMnemonic('S');
                jMenu1.setText("File");
                jMenu1.setToolTipText("");

                //---- jMenuItem3 ----
                jMenuItem3.setMnemonic('N');
                jMenuItem3.setText("Preferences");
                jMenuItem3.addActionListener(e -> jMenuItem3ActionPerformed(e));
                jMenu1.add(jMenuItem3);
                jMenu1.addSeparator();

                //---- jMenuItem1 ----
                jMenuItem1.setMnemonic('U');
                jMenuItem1.setText("Quit");
                jMenuItem1.addActionListener(e -> jMenuItem1ActionPerformed(e));
                jMenu1.add(jMenuItem1);
            }
            jMenuBar1.add(jMenu1);

            //======== jMenu3 ========
            {
                jMenu3.setMnemonic('N');
                jMenu3.setText("Help");

                //---- jMenuItem2 ----
                jMenuItem2.setMnemonic('O');
                jMenuItem2.setText("About");
                jMenu3.add(jMenuItem2);
            }
            jMenuBar1.add(jMenu3);
        }
        setJMenuBar(jMenuBar1);

        //======== jPanelTimer ========
        {
            jPanelTimer.setBorder(new TitledBorder("Timer"));
            jPanelTimer.setNextFocusableComponent(jButtonStartStop);

            //---- jButtonStartStop ----
            jButtonStartStop.setFont(new Font("Tahoma", Font.PLAIN, 16));
            jButtonStartStop.setText("START");
            jButtonStartStop.setToolTipText("Zapne nebo zastav\u00ed odpo\u010d\u00edt\u00e1v\u00e1n\u00ed \u010dasom\u00edry");
            jButtonStartStop.setNextFocusableComponent(jRadioButton1min);
            jButtonStartStop.addActionListener(e -> jButtonStartStopClicked(e));

            //---- jTextFieldMinutes ----
            jTextFieldMinutes.setEditable(false);
            jTextFieldMinutes.setFont(new Font("Tahoma", Font.PLAIN, 72));
            jTextFieldMinutes.setHorizontalAlignment(SwingConstants.CENTER);
            jTextFieldMinutes.setText("01");
            jTextFieldMinutes.setToolTipText("Minuty");

            //---- jLabelColon ----
            jLabelColon.setFont(new Font("Tahoma", Font.PLAIN, 72));
            jLabelColon.setText(":");

            //---- jTextFieldSeconds ----
            jTextFieldSeconds.setEditable(false);
            jTextFieldSeconds.setFont(new Font("Tahoma", Font.PLAIN, 72));
            jTextFieldSeconds.setHorizontalAlignment(SwingConstants.CENTER);
            jTextFieldSeconds.setText("00");
            jTextFieldSeconds.setToolTipText("Vte\u0159iny");

            //======== jPanelPreset ========
            {

                //---- jLabelPresetTitle ----
                jLabelPresetTitle.setFont(new Font("Tahoma", Font.BOLD, 11));
                jLabelPresetTitle.setText("Time preset:");

                //---- jRadioButton1min ----
                jRadioButton1min.setSelected(true);
                jRadioButton1min.setText("1 minute");
                jRadioButton1min.setActionCommand("1  minuta");
                jRadioButton1min.addActionListener(e -> jRadioButton1ActionPerformed(e));

                //---- jRadioButton2min ----
                jRadioButton2min.setText("2 minutes");
                jRadioButton2min.addActionListener(e -> jRadioButton2ActionPerformed(e));

                //---- jRadioButton3min ----
                jRadioButton3min.setText("3 minutes");
                jRadioButton3min.addActionListener(e -> jRadioButton3ActionPerformed(e));

                //---- jRadioButton5min ----
                jRadioButton5min.setText("5 minutes");
                jRadioButton5min.addActionListener(e -> jRadioButton4ActionPerformed(e));

                //---- jRadioButton10min ----
                jRadioButton10min.setText("10 minutes");
                jRadioButton10min.addActionListener(e -> jRadioButton5ActionPerformed(e));

                //---- jRadioButtonXmin ----
                jRadioButtonXmin.addActionListener(e -> jRadioButton6ActionPerformed(e));

                //---- jTextFieldXmin ----
                jTextFieldXmin.setEditable(false);
                jTextFieldXmin.addKeyListener(new KeyAdapter() {
                    @Override
                    public void keyReleased(KeyEvent e) {
                        jTextFieldPocetMinutKeyReleased(e);
                    }
                });

                //---- jLabelXmin ----
                jLabelXmin.setText("min");

                //---- jButtonResetTimer ----
                jButtonResetTimer.setText("Reset");
                jButtonResetTimer.setEnabled(false);
                jButtonResetTimer.addActionListener(e -> jTlacResetCasomiryActionPerformed(e));

                GroupLayout jPanelPresetLayout = new GroupLayout(jPanelPreset);
                jPanelPreset.setLayout(jPanelPresetLayout);
                jPanelPresetLayout.setHorizontalGroup(
                    jPanelPresetLayout.createParallelGroup()
                        .addGroup(jPanelPresetLayout.createSequentialGroup()
                            .addGroup(jPanelPresetLayout.createParallelGroup()
                                .addComponent(jLabelPresetTitle)
                                .addGroup(jPanelPresetLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(jPanelPresetLayout.createParallelGroup()
                                        .addComponent(jRadioButton1min)
                                        .addComponent(jRadioButton2min)
                                        .addComponent(jRadioButton3min))
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanelPresetLayout.createParallelGroup()
                                        .addComponent(jRadioButton5min)
                                        .addComponent(jRadioButton10min)
                                        .addGroup(jPanelPresetLayout.createSequentialGroup()
                                            .addComponent(jRadioButtonXmin)
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextFieldXmin, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabelXmin)))))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonResetTimer)
                            .addContainerGap())
                );
                jPanelPresetLayout.setVerticalGroup(
                    jPanelPresetLayout.createParallelGroup()
                        .addGroup(jPanelPresetLayout.createSequentialGroup()
                            .addGroup(jPanelPresetLayout.createParallelGroup()
                                .addGroup(jPanelPresetLayout.createSequentialGroup()
                                    .addComponent(jLabelPresetTitle)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanelPresetLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRadioButton1min)
                                        .addComponent(jRadioButton5min)))
                                .addGroup(jPanelPresetLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jButtonResetTimer)))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelPresetLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jRadioButton2min)
                                .addComponent(jRadioButton10min))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelPresetLayout.createParallelGroup()
                                .addComponent(jRadioButton3min)
                                .addGroup(jPanelPresetLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldXmin, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelXmin))
                                .addComponent(jRadioButtonXmin))
                            .addContainerGap(12, Short.MAX_VALUE))
                );
            }

            GroupLayout jPanelTimerLayout = new GroupLayout(jPanelTimer);
            jPanelTimer.setLayout(jPanelTimerLayout);
            jPanelTimerLayout.setHorizontalGroup(
                jPanelTimerLayout.createParallelGroup()
                    .addGroup(jPanelTimerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelTimerLayout.createParallelGroup()
                            .addGroup(jPanelTimerLayout.createSequentialGroup()
                                .addGroup(jPanelTimerLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonStartStop, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanelPreset, GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelTimerLayout.createSequentialGroup()
                                .addComponent(jTextFieldMinutes, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(jLabelColon)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldSeconds, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
            );
            jPanelTimerLayout.setVerticalGroup(
                jPanelTimerLayout.createParallelGroup()
                    .addGroup(jPanelTimerLayout.createSequentialGroup()
                        .addGroup(jPanelTimerLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldMinutes, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSeconds, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelColon))
                        .addGap(12, 12, 12)
                        .addComponent(jButtonStartStop)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelPreset, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            );
        }
        contentPane.add(jPanelTimer);

        //======== jPanelSeries ========
        {
            jPanelSeries.setBorder(new TitledBorder("Series counter:"));

            //---- jTextFieldSeries ----
            jTextFieldSeries.setEditable(false);
            jTextFieldSeries.setFont(new Font("Tahoma", Font.PLAIN, 18));
            jTextFieldSeries.setHorizontalAlignment(SwingConstants.CENTER);
            jTextFieldSeries.setText("0");
            jTextFieldSeries.setToolTipText("Po\u010det odcvi\u010den\u00fdch s\u00e9ri\u00ed");

            //---- jLabelSeries ----
            jLabelSeries.setFont(new Font("Tahoma", Font.PLAIN, 18));
            jLabelSeries.setText("series");

            //---- jButtonSetSeries ----
            jButtonSetSeries.setText("Set");
            jButtonSetSeries.setToolTipText("Nejprve je nutn\u00e9 nastavit re\u017eim odpo\u010d\u00edt\u00e1v\u00e1n\u00ed.");
            jButtonSetSeries.setEnabled(false);
            jButtonSetSeries.setMargin(new Insets(2, 5, 2, 5));
            jButtonSetSeries.setPreferredSize(new Dimension(63, 23));
            jButtonSetSeries.addActionListener(e -> jTlacNastavSerieActionPerformed(e));

            //---- jButtonResetSeries ----
            jButtonResetSeries.setText("Reset");
            jButtonResetSeries.setMargin(null);
            jButtonResetSeries.addActionListener(e -> jTlacResetSerii1ActionPerformed(e));

            //---- jLabelSeriesCounterMode ----
            jLabelSeriesCounterMode.setFont(new Font("Tahoma", Font.PLAIN, 10));
            jLabelSeriesCounterMode.setText("Mode: ascendant counting");
            jLabelSeriesCounterMode.setEnabled(false);

            GroupLayout jPanelSeriesLayout = new GroupLayout(jPanelSeries);
            jPanelSeries.setLayout(jPanelSeriesLayout);
            jPanelSeriesLayout.setHorizontalGroup(
                jPanelSeriesLayout.createParallelGroup()
                    .addGroup(jPanelSeriesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelSeriesLayout.createParallelGroup()
                            .addGroup(jPanelSeriesLayout.createSequentialGroup()
                                .addComponent(jTextFieldSeries, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelSeries)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addComponent(jButtonSetSeries, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonResetSeries))
                            .addGroup(jPanelSeriesLayout.createSequentialGroup()
                                .addComponent(jLabelSeriesCounterMode)
                                .addGap(0, 110, Short.MAX_VALUE)))
                        .addContainerGap())
            );
            jPanelSeriesLayout.setVerticalGroup(
                jPanelSeriesLayout.createParallelGroup()
                    .addGroup(jPanelSeriesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelSeriesLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSetSeries, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonResetSeries)
                            .addGroup(jPanelSeriesLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldSeries, GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                .addComponent(jLabelSeries)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelSeriesCounterMode)
                        .addContainerGap())
            );
        }
        contentPane.add(jPanelSeries);

        //======== jPanelGlobalTime ========
        {
            jPanelGlobalTime.setBorder(new TitledBorder("Exercise time:"));

            //---- jLabelHours ----
            jLabelHours.setText("hours");

            //---- jTextFieldGlobalTime ----
            jTextFieldGlobalTime.setEditable(false);
            jTextFieldGlobalTime.setHorizontalAlignment(SwingConstants.CENTER);
            jTextFieldGlobalTime.setText("00:00");
            jTextFieldGlobalTime.setPreferredSize(new Dimension(63, 21));

            //---- jLabelGlobalTime ----
            jLabelGlobalTime.setFont(new Font("Tahoma", Font.PLAIN, 10));
            jLabelGlobalTime.setText("Hodiny:");
            jLabelGlobalTime.setEnabled(false);

            //---- jLabelGlobalTimeState ----
            jLabelGlobalTimeState.setFont(new Font("Tahoma", Font.PLAIN, 10));
            jLabelGlobalTimeState.setText("neb\u011b\u017e\u00ed");
            jLabelGlobalTimeState.setEnabled(false);

            //---- jButtonResetGlobalTime ----
            jButtonResetGlobalTime.setText("Reset");
            jButtonResetGlobalTime.addActionListener(e -> jButton1ActionPerformed(e));

            //---- jButtonPauseGlobalTime ----
            jButtonPauseGlobalTime.setText("Pause");

            GroupLayout jPanelGlobalTimeLayout = new GroupLayout(jPanelGlobalTime);
            jPanelGlobalTime.setLayout(jPanelGlobalTimeLayout);
            jPanelGlobalTimeLayout.setHorizontalGroup(
                jPanelGlobalTimeLayout.createParallelGroup()
                    .addGroup(jPanelGlobalTimeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelGlobalTimeLayout.createParallelGroup()
                            .addGroup(jPanelGlobalTimeLayout.createSequentialGroup()
                                .addComponent(jLabelGlobalTime)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelGlobalTimeState)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelGlobalTimeLayout.createSequentialGroup()
                                .addComponent(jTextFieldGlobalTime, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelHours)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonPauseGlobalTime)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonResetGlobalTime)))
                        .addContainerGap())
            );
            jPanelGlobalTimeLayout.setVerticalGroup(
                jPanelGlobalTimeLayout.createParallelGroup()
                    .addGroup(jPanelGlobalTimeLayout.createSequentialGroup()
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelGlobalTimeLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldGlobalTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelHours)
                            .addComponent(jButtonPauseGlobalTime)
                            .addComponent(jButtonResetGlobalTime))
                        .addGroup(jPanelGlobalTimeLayout.createParallelGroup()
                            .addComponent(jLabelGlobalTimeState)
                            .addComponent(jLabelGlobalTime)))
            );
        }
        contentPane.add(jPanelGlobalTime);
        pack();
        setLocationRelativeTo(getOwner());

        //======== jFramePreferences ========
        {
            jFramePreferences.setTitle("Preferences");
            jFramePreferences.setAlwaysOnTop(true);
            jFramePreferences.setBounds(new Rectangle(100, 100, 0, 0));
            jFramePreferences.setLocationByPlatform(true);
            jFramePreferences.setMinimumSize(new Dimension(300, 140));
            jFramePreferences.setResizable(false);
            Container jFramePreferencesContentPane = jFramePreferences.getContentPane();

            //---- jLabelPreferencesDesc ----
            jLabelPreferencesDesc.setText("Chose ascending or descending series counter mode.");

            //---- jRadioButtonAsc ----
            jRadioButtonAsc.setSelected(true);
            jRadioButtonAsc.setText("ascending");

            //---- jRadioButtonDesc ----
            jRadioButtonDesc.setText("descending");

            //---- jLabelPreferencesHeading ----
            jLabelPreferencesHeading.setFont(new Font("Tahoma", Font.BOLD, 11));
            jLabelPreferencesHeading.setText("Series counter mode:");

            //---- jButtonSavePreferences ----
            jButtonSavePreferences.setText("Save");
            jButtonSavePreferences.addActionListener(e -> jTlacUlozNastaveniActionPerformed(e));

            //---- jButtonStornoPreferences ----
            jButtonStornoPreferences.setText("Storno");
            jButtonStornoPreferences.addActionListener(e -> jTlacZavriNastaveniActionPerformed(e));

            GroupLayout jFramePreferencesContentPaneLayout = new GroupLayout(jFramePreferencesContentPane);
            jFramePreferencesContentPane.setLayout(jFramePreferencesContentPaneLayout);
            jFramePreferencesContentPaneLayout.setHorizontalGroup(
                jFramePreferencesContentPaneLayout.createParallelGroup()
                    .addGroup(jFramePreferencesContentPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jFramePreferencesContentPaneLayout.createParallelGroup()
                            .addComponent(jLabelPreferencesHeading)
                            .addComponent(jLabelPreferencesDesc)
                            .addGroup(jFramePreferencesContentPaneLayout.createSequentialGroup()
                                .addComponent(jRadioButtonAsc)
                                .addGroup(jFramePreferencesContentPaneLayout.createParallelGroup()
                                    .addGroup(jFramePreferencesContentPaneLayout.createSequentialGroup()
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                                        .addComponent(jButtonSavePreferences, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonStornoPreferences))
                                    .addGroup(jFramePreferencesContentPaneLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jRadioButtonDesc)))))
                        .addContainerGap())
            );
            jFramePreferencesContentPaneLayout.setVerticalGroup(
                jFramePreferencesContentPaneLayout.createParallelGroup()
                    .addGroup(jFramePreferencesContentPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelPreferencesHeading)
                        .addGap(1, 1, 1)
                        .addComponent(jLabelPreferencesDesc)
                        .addGroup(jFramePreferencesContentPaneLayout.createParallelGroup()
                            .addGroup(jFramePreferencesContentPaneLayout.createSequentialGroup()
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jFramePreferencesContentPaneLayout.createParallelGroup()
                                    .addComponent(jRadioButtonAsc)
                                    .addComponent(jRadioButtonDesc))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(GroupLayout.Alignment.TRAILING, jFramePreferencesContentPaneLayout.createSequentialGroup()
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addGroup(jFramePreferencesContentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonStornoPreferences)
                                    .addComponent(jButtonSavePreferences))
                                .addContainerGap())))
            );
        }

        //---- buttonGroup1 ----
        ButtonGroup buttonGroup1 = new ButtonGroup();
        buttonGroup1.add(jRadioButton1min);
        buttonGroup1.add(jRadioButton2min);
        buttonGroup1.add(jRadioButton3min);
        buttonGroup1.add(jRadioButton5min);
        buttonGroup1.add(jRadioButton10min);
        buttonGroup1.add(jRadioButtonXmin);

        //---- buttonGroup2 ----
        ButtonGroup buttonGroup2 = new ButtonGroup();
        buttonGroup2.add(jRadioButtonAsc);
        buttonGroup2.add(jRadioButtonDesc);
    }// </editor-fold>//GEN-END:initComponents


    /**
     * ExTimer worker called on timer-tick
     */
    private ActionListener exTimerTickTock = evt -> {
        Time time = getExerciseTime();
        time.seconds--;                // minus one second
        if (time.seconds < 0) {
            time.minutes--;
            time.seconds = 59;
        }

        // time has ran out ?
        if ((time.seconds == 0) && (time.minutes == 0)) {
            exerciseTimeRanOut();
        } else {
            setExerciseTime(time);
        }
    };


//    /**
//     * Slouzi pro jednvterinove zpozdeni napisu "pocitadlo serii"
//     */
//    ActionListener zpozdeniCasu = new ActionListener() {
//        @Override
//        public void actionPerformed(ActionEvent evt) {
//            jLabelSeriesCounterMode.setText("odpočítání sérií");
//        }
//    };


    /**
     * Called when exercise time is 00:00
     * Stops exTimer, adjusts GUI, resets timer and plays sound.
     */
    private void exerciseTimeRanOut() {
        exTimer.stop();
        adjustGUI(true);
        WawPlayer.playSound("alarm2.wav");
        resetExerciseTime();

        // increase or decrease series counter
        int numSeries = getNumberOfSeries();
        if (seriesCounterMode == CounterMode.DESCENDANT) {
            if (numSeries != 0) {
                numSeries--;
            } else {
                // TODO add some kind of notification
            }
        } else {
            numSeries++;
        }
        setNumberOfSeries(numSeries);
    }


    /**
     * Sets number of series to GUI text field
     */
    private void setNumberOfSeries(int numSeries) {
        jTextFieldSeries.setText(Integer.toString(numSeries));
    }

    /**
     * Gets number of series from GUI text field
     */
    private int getNumberOfSeries() {
        return Integer.parseInt(jTextFieldSeries.getText());
    }


    /**
     * Sets minutes and seconds to exercise time text fields
     */
    private void setExerciseTime(int minutes, int seconds) {
        jTextFieldMinutes.setText(String.format("%02d", minutes));
        jTextFieldSeconds.setText(String.format("%02d", seconds));
    }

    /**
     * Sets minutes and seconds to exercise time text fields
     */
    private void setExerciseTime(Time time) {
        jTextFieldMinutes.setText(String.format("%02d", time.minutes));
        jTextFieldSeconds.setText(String.format("%02d", time.seconds));
    }

    /**
     * Gets current exercise time from minutes and seconds text field
     */
    private Time getExerciseTime() {
        return new Time(Integer.parseInt(jTextFieldMinutes.getText()), Integer.parseInt(jTextFieldSeconds.getText()));
    }


    private void resetExerciseTime() {
        setExerciseTime(defaultExMinutes, defaultExSeconds);
    }


    /**
     * Depending on if exercise timer is running this methods enables/disables GUI elements
     */
    private void adjustGUI(boolean timerIsStopped) {
        jButtonStartStop.setText(timerIsStopped ? "START" : "STOP");
        jButtonResetTimer.setEnabled(timerIsStopped);
        jRadioButton1min.setEnabled(timerIsStopped);
        jRadioButton2min.setEnabled(timerIsStopped);
        jRadioButton3min.setEnabled(timerIsStopped);
        jRadioButton5min.setEnabled(timerIsStopped);
        jRadioButton10min.setEnabled(timerIsStopped);
        jRadioButtonXmin.setEnabled(timerIsStopped);
        jTextFieldXmin.setEnabled(timerIsStopped);
        jLabelXmin.setEnabled(timerIsStopped);
    }

    private void startExerciseTimer(){
        exTimer.start();
        adjustGUI(!exTimer.isRunning());
    }

    private void stopExerciseTimer(){
        exTimer.stop();
        adjustGUI(!exTimer.isRunning());
    }

    private void saveSettings() {
        // set selected mode
        if (jRadioButtonAsc.isSelected()) {
            seriesCounterMode = CounterMode.ASCENDANT;
        } else {
            seriesCounterMode = CounterMode.DESCENDANT;
        }
        // adjust GUI according to selected mode
        if (seriesCounterMode == CounterMode.ASCENDANT) {
            jTextFieldSeries.setEditable(false);
            jButtonSetSeries.setEnabled(false);
            jLabelSeriesCounterMode.setText("Mode: ascendant counting.");
        } else {
            jTextFieldSeries.setEditable(true);
            jButtonSetSeries.setEnabled(true);
            jButtonStartStop.setEnabled(false);
            jLabelSeriesCounterMode.setText("Mode: descendant counting");
        }
        jFramePreferences.dispose();      // close dialog
    }


/* ********************* event handlers ******************************** */


    /**
     * START/STOP button clicked slot
     */
    private void jButtonStartStopClicked(java.awt.event.ActionEvent evt) {
        if ((exTimer == null) || (!exTimer.isRunning())) {
            startExerciseTimer();
        } else {
            stopExerciseTimer();
        }
    }

    /**
     * 1 minute radio button clicked
     */
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        defaultExMinutes = 1;
        setExerciseTime(defaultExMinutes, defaultExSeconds);
        jTextFieldXmin.setEditable(false);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    /**
     * 2 minuty
     */
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        defaultExMinutes = 2;
        setExerciseTime(defaultExMinutes, defaultExSeconds);
        jTextFieldXmin.setEditable(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    /**
     * 3 minuty
     */
    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        defaultExMinutes = 3;
        setExerciseTime(defaultExMinutes, defaultExSeconds);
        jTextFieldXmin.setEditable(false);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    /**
     * 5 minut
     */
    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        defaultExMinutes = 5;
        setExerciseTime(defaultExMinutes, defaultExSeconds);
        jTextFieldXmin.setEditable(false);
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    /**
     * 10 minut
     */
    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        defaultExMinutes = 10;
        setExerciseTime(defaultExMinutes, defaultExSeconds);
        jTextFieldXmin.setEditable(false);
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    /**
     * ?? minut
     */
    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        jTextFieldXmin.setEditable(true);
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    /**
     * ?? minut
     */
    private void jTextFieldPocetMinutKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPocetMinutKeyReleased
        // pokud byl zadán nějaký znak
        if (!(jTextFieldXmin.getText().equals(""))) {
            // zkusí zadané znaky naparsovat na číslo
            try {
                defaultExMinutes = Integer.parseInt(jTextFieldXmin.getText());
            } catch (NumberFormatException e) {
                System.out.println("Chyba. Musí být zadáno číslo");
                jTextFieldXmin.setText("");
                return; // vyskoci z metody, pokud skonci chybou
            }
            // cislo nesmi byt vetsi nez 2 des mista
            if (defaultExMinutes > 99) {
                System.out.println("Chyba. Bylo zadáno moc veliké číslo");
                jTextFieldXmin.setText("0");
                defaultExMinutes = 0;
            }
            // nastaveni casu
            setExerciseTime(defaultExMinutes, defaultExSeconds);

        }
    }//GEN-LAST:event_jTextFieldPocetMinutKeyReleased

    /**
     * Tlačítko RESET u casomiry
     */
    private void jTlacResetCasomiryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTlacResetCasomiryActionPerformed
        resetExerciseTime();    // provede reset casomiry
    }//GEN-LAST:event_jTlacResetCasomiryActionPerformed

    /* Konec programu */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /* Otevreni nastaveni casomiry */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        jFramePreferences.setVisible(true);
        jFramePreferences.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /* Zavri nastaveni */
    private void jTlacZavriNastaveniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTlacZavriNastaveniActionPerformed
        jFramePreferences.dispose();      // "zniceni" okna
    }//GEN-LAST:event_jTlacZavriNastaveniActionPerformed

    /* Ulozeni nastaveni casomiry */
    private void jTlacUlozNastaveniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTlacUlozNastaveniActionPerformed
        saveSettings();
    }//GEN-LAST:event_jTlacUlozNastaveniActionPerformed

    /* Tlacitko nastav pocet serii */
    private void jTlacNastavSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTlacNastavSerieActionPerformed

        try {
            int tmp = Integer.parseInt(jTextFieldSeries.getText());
            if (tmp <= 0)
                throw new NumberFormatException();
//            else
//                pocSerii = tmp;

        } catch (NumberFormatException e) {
            final String textTlacitka = jLabelSeriesCounterMode.getText();
            jLabelSeriesCounterMode.setText("Musí byt nastaveno kladné celé číslo!");
            jButtonStartStop.setEnabled(false);
            // zobrazeni informace o chybne zadanem cisle
            new Thread(new Runnable() {

                @Override
                public void run() {
                    try {
                        Thread.sleep(1500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
                    }
//                    jLabelSeriesCounterMode.setText(textTlacitka);

                }
            }).start();
            //jTextFieldSeries.setText("0");
//            setNumberOfSeries(pocSerii);
            return;     // vyskoci ven z metody
        }
        // nastavi pocet serii
//        setNumberOfSeries(pocSerii);
        jLabelSeriesCounterMode.setText("Nastaven odpočítávání sérií (nastaveno " + jTextFieldSeries.getText() + ").");
        jButtonStartStop.setEnabled(true);
    }//GEN-LAST:event_jTlacNastavSerieActionPerformed

    private void jTlacResetSerii1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTlacResetSerii1ActionPerformed
        setNumberOfSeries(0);
    }//GEN-LAST:event_jTlacResetSerii1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Windows look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MainApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JMenuBar jMenuBar1;
    private JMenu jMenu1;
    private JMenuItem jMenuItem3;
    private JMenuItem jMenuItem1;
    private JMenu jMenu3;
    private JMenuItem jMenuItem2;
    private JPanel jPanelTimer;
    private JButton jButtonStartStop;
    private JTextField jTextFieldMinutes;
    private JLabel jLabelColon;
    private JTextField jTextFieldSeconds;
    private JPanel jPanelPreset;
    private JLabel jLabelPresetTitle;
    private JRadioButton jRadioButton1min;
    private JRadioButton jRadioButton2min;
    private JRadioButton jRadioButton3min;
    private JRadioButton jRadioButton5min;
    private JRadioButton jRadioButton10min;
    private JRadioButton jRadioButtonXmin;
    private JTextField jTextFieldXmin;
    private JLabel jLabelXmin;
    private JButton jButtonResetTimer;
    private JPanel jPanelSeries;
    private JTextField jTextFieldSeries;
    private JLabel jLabelSeries;
    private JButton jButtonSetSeries;
    private JButton jButtonResetSeries;
    private JLabel jLabelSeriesCounterMode;
    private JPanel jPanelGlobalTime;
    private JLabel jLabelHours;
    private JTextField jTextFieldGlobalTime;
    private JLabel jLabelGlobalTime;
    private JLabel jLabelGlobalTimeState;
    private JButton jButtonResetGlobalTime;
    private JButton jButtonPauseGlobalTime;
    private JFrame jFramePreferences;
    private JLabel jLabelPreferencesDesc;
    private JRadioButton jRadioButtonAsc;
    private JRadioButton jRadioButtonDesc;
    private JLabel jLabelPreferencesHeading;
    private JButton jButtonSavePreferences;
    private JButton jButtonStornoPreferences;
    // End of variables declaration//GEN-END:variables


}
